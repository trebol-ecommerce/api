{
    "info": {
        "title": "Tr√©bol API Commons",
        "version": "1.0.0",
        "description": "A collection of components for reusing in other API documents.",
        "contact": {
            "name": "Benjamin La Madrid",
            "email": "bg.lamadrid@gmail.com"
        },
        "license": {
            "name": "GNU GPLv3",
            "url": "https://www.gnu.org/licenses/gpl.txt"
        }
    },
    "components": {
        "schemas": {
            "DataPage": {
                "title": "Root Type for DataPage",
                "description": "A pageable representation of data.",
                "type": "object",
                "properties": {
                    "items": {
                        "description": "The contents of the page.",
                        "type": "array",
                        "items": {}
                    },
                    "pageIndex": {
                        "description": "The index of the page (0-based)",
                        "type": "integer"
                    },
                    "totalCount": {
                        "description": "The total amount of items matched under the same search criteria.",
                        "type": "integer"
                    },
                    "pageSize": {
                        "description": "The amount of items that any page may have.",
                        "type": "integer"
                    }
                },
                "example": {
                    "items": [
                        {
                            "name": "example product",
                            "code": "EXMPL001"
                        },
                        {
                            "name": "example product 2",
                            "code": "EXMPL002"
                        }
                    ],
                    "pageIndex": 2,
                    "totalCount": 32,
                    "pageSize": 15
                }
            },
            "LoginCredentials": {
                "title": "Root Type for LoginCredentials",
                "description": "Data sent by an user to authenticate themselves.",
                "required": [
                    "name",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The user name.",
                        "type": "string"
                    },
                    "password": {
                        "description": "The user password.",
                        "type": "string"
                    }
                },
                "example": {
                    "name": "an username",
                    "password": "a password"
                }
            },
            "UserRegistration": {
                "title": "Root Type for UserRegistration",
                "description": "Credentials and personal information for a new user account.",
                "required": [
                    "password",
                    "profile",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/Person"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "example": {
                    "password": "some text",
                    "profile": {
                        "name": "some text",
                        "idNumber": "some text",
                        "email": "some text",
                        "phone1": "+1111111111",
                        "phone2": "+22 222 222 22"
                    },
                    "name": "some text"
                }
            },
            "AuthorizedAccess": {
                "title": "Root Type for AuthorizedAcess",
                "description": "A generic container of API resource paths or actions on a specific resource, for which access is granted",
                "type": "object",
                "properties": {
                    "routes": {
                        "description": "A list of authorized routes to consume.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "permissions": {
                        "description": "A list of authorized actions for a specific route.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "routes": [
                        "clients",
                        "products",
                        "people",
                        "sales",
                        "salespeople",
                        "users"
                    ]
                }
            },
            "Person": {
                "title": "Root Type for Person",
                "description": "Personal information about an individual.",
                "required": [
                    "idNumber"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "description": "The e-mail address.",
                        "type": "string"
                    },
                    "phone1": {
                        "description": "The preferred personal phone number",
                        "pattern": "^(\\(\\+?(\\d{3}|\\d{2} ?\\d)\\)|\\+?\\d{3}|\\+?\\d{2}[ -]?\\d)?[ -]?(\\d{8}|(\\d{2,4}[ -]?){2,4}|)$",
                        "type": "string"
                    },
                    "phone2": {
                        "description": "A second phone number",
                        "pattern": "^(\\(\\+?(\\d{3}|\\d{2} ?\\d)\\)|\\+?\\d{3}|\\+?\\d{2}[ -]?\\d)?[ -]?(\\d{8}|(\\d{2,4}[ -]?){2,4}|)$",
                        "type": "string"
                    },
                    "idNumber": {
                        "description": "The national identification number as issued by the individual's birth country government.",
                        "type": "string"
                    },
                    "firstName": {
                        "description": "The individual's first name.",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "The individual's last or family name.",
                        "type": "string"
                    }
                },
                "example": {
                    "firstName": "Isaac Sebastian",
                    "lastName": "Williams McGregor",
                    "idNumber": "123456789-0",
                    "email": "example@email.com",
                    "phone1": "(+512)784 876 823",
                    "phone2": "4444 9820"
                }
            }
        },
        "responses": {
            "PaginatedCollection": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DataPage"
                        }
                    }
                },
                "description": "Normal response for most \"/data\" methods; sends items in an array, along with pagination metadata."
            },
            "Forbidden": {
                "description": "Erroneous, empty response for requests not meeting security requirements. Most likely, it does not have authorization to access specific privileged resource(s), or does not include any form of authentication while requesting some privileged resource(s)."
            },
            "AuthorizedAccessToResource": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AuthorizedAccess"
                        }
                    }
                },
                "description": "Normal response. Sends an AuthorizedAccess object with an array of available and permitted actions."
            },
            "AuthorizedAccessToRoutes": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AuthorizedAccess"
                        }
                    }
                },
                "description": "Normal response. Sends an array of API routes available for use from a parent path."
            },
            "NotFound": {
                "description": "Non-erroneous, empty response which indicates that no data matched the provided criteria."
            },
            "Empty": {
                "description": "Normal response which indicates everything went right (after successfully altering data, for example) and that there's no additional information to be included."
            },
            "AllowMethodPOST": {
                "description": "Normal, empty response to some OPTIONS requests. Should include CORS headers and indicate that only the POST method is allowed."
            },
            "AllowMethodGET": {
                "description": "Normal, empty response to some OPTIONS requests. Should include CORS headers and indicate that only the GET method is allowed."
            },
            "AllowAllMethods": {
                "description": "Normal, empty response to some OPTIONS requests. Should include CORS headers and indicate that the methods GET, POST PUT and DELETE are allowed."
            },
            "AllowMethodGET-PUT": {
                "description": "Normal, empty response to some OPTIONS requests. Should include CORS headers and indicate that only the GET and PUT methods are allowed."
            },
            "BadRequestBody": {
                "description": "Erroneous response, sent when the request does not meet certain expectations. This probably because required properties were not included in the request body, or because certain data constraints (duplicate code numbers, for example) were not met."
            }
        }
    }
}